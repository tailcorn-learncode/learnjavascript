from locust import HttpUser, task, between, TaskSet
import requests

class WhoAmITestUser(HttpUser):
    wait_time = between(1, 5)
    access_token = None

    @task
    def get_token(self):
        tenant_id = "your_tenant_id"
        client_id = "your_client_id"
        client_secret = "your_client_secret"
        scope = "your_scope"
        issuer_url = "your_issuer_url"

        token_url = f"{issuer_url}/oauth2/v2.0/token"
        headers = {
            "Content-Type": "application/x-www-form-urlencoded"
        }
        body = {
            "client_id": client_id,
            "scope": scope,
            "client_secret": client_secret,
            "grant_type": "client_credentials"
        }

        response = requests.post(token_url, headers=headers, data=body)
        response_json = response.json()
        
        if "access_token" in response_json:
            self.access_token = response_json["access_token"]
        else:
            self.access_token = None
            print("Failed to retrieve access token")

    @task
    def test_whoami_endpoint(self):
        if not self.access_token:
            self.get_token()
        
        if self.access_token:
            headers = {
                "Authorization": f"Bearer {self.access_token}"
            }
            with self.client.get("/api/data/v9.2/WhoAmI", headers=headers, catch_response=True) as response:
                if response.status_code == 200:
                    response.success()
                else:
                    response.failure(f"Failed with status code {response.status_code}")
