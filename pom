<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.1</version>
        <relativePath/>
    </parent>
    <groupId>gov.mipath.atlas</groupId>
    <artifactId>atlas-services</artifactId>   
    <version>1.0-SNAPSHOT</version>
    <name>atlas-services</name>
    <packaging>pom</packaging>
	<description>Atlas</description>

    <modules>
        <module>arch</module>          <!--Admin,User profile,Workflow-->
		<module>admin</module>         <!--Admin,User profile,Workflow-->
		<!--<module>batch</module>          Batch Processing-->
		<!--<module>cepas</module>          CEPAS Client-->
        <module>discovery</module>      <!--Auth, IaC-->
        <!--<module>document</module>       Document Processing-->
        <!--<module>ess</module>            Employer Self Service & W&C -->
        <module>gateway</module>        <!--API Management Internal-->
        <!--<module>imaging</module>        Document Content management Image processing-->
		<module>member</module>         <!--Pre Retirement Member Service includes ENDM, EM, MAM,OSC,GBE,RAP,ETT,Refunds & Finance CAD & CAR-->
		<!--<module>miaccount</module>      WSS-->
		<!--<module>notification</module>   Event Driven -->
		<!--<module>nsi</module>            NSI-->	
		<!-- <module>operations</module> -->
		<!--<module>pension</module>        Post Retirement Pension Service BAA, BRP, PAC, GL, CAD & CAR, TAX and HC-->
        <!--<module>report</module>         Report,FLB Document Generation, FTP, Email & Log-->
    </modules>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <spring-cloud.version>2022.0.1</spring-cloud.version>
        <testcontainers.version>1.17.6</testcontainers.version>
        <java.version>17</java.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <type>pom</type>
                <version>3.1.1</version>
                <scope>import</scope>
            </dependency>    
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>netflix-candidates</id>
            <name>Netflix Candidates</name>
            <url>https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>            
        </plugins>
    </build>

</project>




<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>atlas-services</artifactId>
        <groupId>gov.mipath.atlas</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

	<artifactId>discovery</artifactId>
	<name>discovery-service</name>
	<description>discovery</description>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
		<java.version>17</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.zipkin.reporter2</groupId>
            <artifactId>zipkin-reporter-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>
    </dependencies>     
	<build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>   
			<plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <from>
                        <image>eclipse-temurin:17.0.8.1_1-jre</image>
                    </from>
                    <to>
                        <image>atlas-services/${project.name}</image>
                    </to>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>			         
        </plugins>
    </build>    
</project>




<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>atlas-services</artifactId>
        <groupId>gov.mipath.atlas</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

	<artifactId>gateway</artifactId>
	<name>gateway-service</name>
	<description>API Management Internal</description>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
		<java.version>17</java.version>
    </properties>
     <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency> 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-brave</artifactId>
        </dependency>
        <dependency>
          <groupId>io.zipkin.reporter2</groupId>
          <artifactId>zipkin-reporter-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>com.okta.spring</groupId>
            <artifactId>okta-spring-boot-starter</artifactId>
            <version>3.0.5</version>
        </dependency>        
    </dependencies>
	<build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>   
			<plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <from>
                        <image>eclipse-temurin:17.0.8.1_1-jre</image>
                    </from>
                    <to>
                        <image>atlas-services/${project.name}</image>
                    </to>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>			         
        </plugins>
    </build>    
</project>





<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>atlas-services</artifactId>
        <groupId>gov.mipath.atlas</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

	<artifactId>admin</artifactId>
	<name>admin</name>
	<description>Admin,User profile,Workflow and Imaging</description>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
		<java.version>17</java.version>
		<springdoc.version>2.1.0</springdoc.version>
    </properties>
	<dependencies>
		<dependency>
			<groupId>gov.mipath.atlas</groupId>
			<artifactId>arch</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>				
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>		
		<dependency>
	    	<groupId>org.springframework.boot</groupId>
	    	<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>			
		<dependency>
   			 <groupId>com.azure.spring</groupId>
    		 <artifactId>azure-spring-boot-starter-storage</artifactId>
    		 <version>3.0.0</version>
    	</dependency>
    	<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<version>11.2.3.jre17</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>			
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>fr.opensagres.poi.xwpf.converter.pdf</artifactId>
			<version>2.0.2</version>
		</dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.zipkin.reporter2</groupId>
            <artifactId>zipkin-reporter-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>jakarta.mail</artifactId>
			<version>2.0.1</version>
		</dependency>	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>5.3.2</version>
			<scope>test</scope>
	  	</dependency>
	</dependencies>
	<build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>   
			<plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <from>
                        <image>eclipse-temurin:17.0.8.1_1-jre</image>
                    </from>
                    <to>
                        <image>atlas-services/${project.name}</image>
                    </to>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>			         
        </plugins>
    </build>	
</project>



<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>atlas-services</artifactId>
        <groupId>gov.mipath.atlas</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

	<artifactId>member</artifactId>
	<name>member-service</name>
	<description>Pre Retirement Member Service includes ENDM, EM, MAM,OSC,GBE,RAP,ETT,Refunds, Finance CAD and CAR</description>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
		<java.version>17</java.version>
		<springdoc.version>2.1.0</springdoc.version>
    </properties>
	<dependencies>
		<dependency>
			<groupId>gov.mipath.atlas</groupId>
			<artifactId>arch</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>	 -->
		<!-- springdoc ui -->		
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>
    	<!-- <dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.7.0</version>
		</dependency>		 -->
		<!-- webflux -->		
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>				
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>		
		<dependency>
	    	<groupId>org.springframework.boot</groupId>
	    	<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>						
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>	 -->
		<dependency>
   			 <groupId>com.azure.spring</groupId>
    		 <artifactId>azure-spring-boot-starter-storage</artifactId>
    		 <version>3.0.0</version>
    	</dependency>
    	<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<version>8.4.1.jre8</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>			
		<dependency>
			<groupId>fr.opensagres.xdocreport</groupId>
			<artifactId>fr.opensagres.poi.xwpf.converter.pdf</artifactId>
			<version>2.0.2</version>
		</dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.zipkin.reporter2</groupId>
            <artifactId>zipkin-reporter-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>6.0.11</version>
		</dependency>  -->
 	</dependencies>
	<build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>   
			<plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <from>
                        <image>eclipse-temurin:17.0.8.1_1-jre</image>
                    </from>
                    <to>
                        <image>atlas-services/${project.name}</image>
                    </to>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>			         
        </plugins>
    </build>
</project>


version: "3.7"
services:
  # web-app: 
  #   build: .
  # oauth2-proxy:
  #   image: bitnami/oauth2-proxy:7.3.0
  #   command:
  #     - --http-address
  #     - 0.0.0.0:4180 
  #   environment:
  #     OAUTH2_PROXY_UPSTREAMS: http://localhost:8900/  
  #     OAUTH2_PROXY_PROVIDER: oidc
  #     OAUTH2_PROXY_EMAIL_DOMAINS: '*' 
  #     OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS: true
  #     OAUTH2_PROXY_OIDC_EMAIL_CLAIM: sub
  #     OAUTH2_PROXY_OIDC_ISSUER_URL: https://dev-51172119.okta.com/oauth2/default
  #     OAUTH2_PROXY_CLIENT_ID: 0oabcreotbxWXpAat5d7
  #     OAUTH2_PROXY_SET_XAUTHREQUEST: true
  #     OAUTH2_PROXY_CLIENT_SECRET: ZbazI--b7dFVq9LKRsy6jLdbVqEIfgAtShpbCU2zY1j80SIw1dyy1W4HTQ8dU38r      
  #     OAUTH2_PROXY_COOKIE_SECRET: NOT_USED_BUT_REQUIRED_VALUE_32b_

  #   ports:
  #     - 4180:4180 
# ---
# version: '3.7'
# services:
#   ## MySQL Docker Compose Config
#   postgres-order:
#     container_name: postgres-order
#     image: postgres
#     environment:
#       POSTGRES_DB: order-service
#       POSTGRES_USER: ptechie
#       POSTGRES_PASSWORD: password
#       PGDATA: /data/postgres
#     volumes:
#       - ./postgres-order:/data/postgres
#     expose:
#       - "5431"
#     ports:
#       - "5431:5431"
#     command: -p 5431
#     restart: always

#   postgres-inventory:
#     container_name: postgres-inventory
#     image: postgres
#     environment:
#       POSTGRES_DB: inventory-service
#       POSTGRES_USER: ptechie
#       POSTGRES_PASSWORD: password
#       PGDATA: /data/postgres
#     volumes:
#       - ./postgres-inventory:/data/postgres
#     ports:
#       - "5432:5432"
#     restart: always

#   ## Mongo Docker Compose Config
#   mongo:
#     container_name: mongo
#     image: mongo:4.4.14-rc0-focal
#     restart: always
#     ports:
#       - "27017:27017"
#     expose:
#       - "27017"
#     volumes:
#       - ./mongo-data:/data/db

#   ## Keycloak Config with Mysql database
#   keycloak-mysql:
#     container_name: keycloak-mysql
#     image: mysql:5.7
#     volumes:
#       - ./mysql_keycloak_data:/var/lib/mysql
#     environment:
#       MYSQL_ROOT_PASSWORD: root
#       MYSQL_DATABASE: keycloak
#       MYSQL_USER: keycloak
#       MYSQL_PASSWORD: password

#   keycloak:
#     container_name: keycloak
#     image: quay.io/keycloak/keycloak:18.0.0
#     command: [ "start-dev", "--import-realm" ]
#     environment:
#       DB_VENDOR: MYSQL
#       DB_ADDR: mysql
#       DB_DATABASE: keycloak
#       DB_USER: keycloak
#       DB_PASSWORD: password
#       KEYCLOAK_ADMIN: admin
#       KEYCLOAK_ADMIN_PASSWORD: admin
#     ports:
#       - "8080:8080"
#     volumes:
#       - ./realms/:/opt/keycloak/data/import/
#     depends_on:
#       - keycloak-mysql

#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.0.1
#     container_name: zookeeper
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000

#   broker:
#     image: confluentinc/cp-kafka:7.0.1
#     container_name: broker
#     ports:
#       - "9092:9092"
#     depends_on:
#       - zookeeper
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  ## Eureka Server
  discovery-service:
    build:
      context: ./discovery
      dockerfile: ./Dockerfile
    image: atlas-services/discovery-service:latest
    container_name: discovery-service
    ports:
      - "8761:8761"
    expose:
      - "8761"  
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  gateway-service:
    build:
      context: ./gateway
      dockerfile: ./Dockerfile  
    image: atlas-services/gateway-service:latest
    container_name: gateway-service
    ports:
      - "8181:8181"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - zipkin
      - discovery-service

  ## Member-Service Docker Compose Config
  member-service:
    build:
      context: ./member
      dockerfile: ./Dockerfile    
    image: atlas-services/member-service:latest
    container_name: member-service
    ports:
      - "8900:8900"
    expose:
      - "8900"  
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://orsomp.public.f3ff59b0e371.database.windows.net:3342;databaseName=applicationConfig
    depends_on:  
      - discovery-service
      - gateway-service

  ## Prometheus
  # prometheus:
  #   image: prom/prometheus:v2.37.1
  #   container_name: prometheus
  #   restart: always
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   depends_on:
  #     - member-service

  # grafana:
  #   image: grafana/grafana-oss:8.5.2
  #   container_name: grafana
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   links:
  #     - prometheus:prometheus
  #   volumes:
  #     - ./grafana:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=password



version: '3'

services:
  discovery:
    image: atlas-services/discovery-service
    ports:
      - 8761:8761  # Exposing default Eureka port (modify if different in your setup)
    environment:
      - SPRING_PROFILES_ACTIVE=default

  gateway:
    image: atlas-services/gateway-service
    ports:
      - 8080:8080  # Exposing default Spring Boot port for the gateway (modify if different)
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery:8761/eureka

  member:
    image: atlas-services/member-service
    ports:
      - 8081:8081  # Assuming member service runs on 8081 (modify if different)
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery:8761/eureka




 <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>docker-compose-up</id>
                        <phase>package</phase> <!-- Bind to the package phase -->
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker-compose</executable>
                            <arguments>
                                <argument>up</argument>
                                <argument>-d</argument> <!-- run in detached mode, remove if you want it to be in the foreground -->
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
