import org.springframework.cloud.gateway.filter.GatewayFilter;
import org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Component;
import org.springframework.web.server.ServerWebExchange;

@Component
public class CustomFilter extends AbstractGatewayFilterFactory<CustomFilter.Config> {

    public CustomFilter() {
        super(Config.class);
    }

    @Override
    public GatewayFilter apply(Config config) {
        return (exchange, chain) -> {
            // Example: validate headers
            String apiCode = exchange.getRequest().getHeaders().getFirst("apicode");
            String username = exchange.getRequest().getHeaders().getFirst("username");

            if (apiCode == null || username == null) {
                exchange.getResponse().setStatusCode(HttpStatus.BAD_REQUEST);
                return exchange.getResponse().setComplete();
            }

            return chain.filter(exchange);
        };
    }

    public static class Config {
        // Add configuration properties here if needed
    }
}





server:
  port: 8080

spring:
  application:
    name: gateway-service

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

spring:
  cloud:
    gateway:
      routes:
        - id: microservice-1-admin-route
          uri: lb://microservice-1
          predicates:
            - Header=apicode, 1
            - Header=roletype, admin
            - Path=/admin/**
          filters:
            - RewritePath=/1/admin(/.*)?$, /$\{path}

        - id: microservice-1-member-route
          uri: lb://microservice-1
          predicates:
            - Header=apicode, 1
            - Header=roletype, member
          filters:
            - RewritePath=/1(/.*)?$, /$\{path}

        - id: microservice-2-admin-route
          uri: lb://microservice-2
          predicates:
            - Header=apicode, 2
            - Header=roletype, admin
            - Path=/admin/**
          filters:
            - RewritePath=/2/admin(/.*)?$, /$\{path}

        - id: microservice-2-member-route
          uri: lb://microservice-2
          predicates:
            - Header=apicode, 2
            - Header=roletype, member
          filters:
            - RewritePath=/2(/.*)?$, /$\{path}




server:
  port: 8080

spring:
  application:
    name: gateway-service

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

spring:
  cloud:
    gateway:
      routes:
        - id: microservice-1-admin-route
          uri: lb://microservice-1
          predicates:
            - Header=apicode, 1
            - Header=roletype, admin
          filters:
            - RewritePath=/1(/.*)?$, /$\{path}

        - id: microservice-1-member-route
          uri: lb://microservice-1
          predicates:
            - Header=apicode, 1
            - Header=roletype, member
          filters:
            - RewritePath=/1(/.*)?$, /$\{path}

        - id: microservice-2-admin-route
          uri: lb://microservice-2
          predicates:
            - Header=apicode, 2
            - Header=roletype, admin
          filters:
            - RewritePath=/2(/.*)?$, /$\{path}

        - id: microservice-2-member-route
          uri: lb://microservice-2
          predicates:
            - Header=apicode, 2
            - Header=roletype, member
          filters:
            - RewritePath=/2(/.*)?$, /$\{path}
