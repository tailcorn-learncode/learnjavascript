Given below is atlas-accordian angular component. Inside this tailwindcss used with prefix - "t-". Need to remove tailwindcss and use vanilla css instead with meaning full class names.
write vanila css in atlas-accordian.component.scss. make you not miss any css and look should be exact.

atlas-accordian.component.html..

<mat-accordion>
  <mat-expansion-panel [class.mat-expansion-panel]="false" *ngFor="let header of headers; let i = index" (opened)="togglePanel(i)" (closed)="togglePanel(i)" [expanded]="i === 0">
    <mat-expansion-panel-header class="t-h-10">
      <!-- <div class="t-justify-center t-items-center t-flex">
        <span class="material-symbols-outlined">person</span>
      </div> -->
      <div class="t-grow t-shrink t-basis-0 t-self-stretch t-flex-col t-justify-center t-items-start t-inline-flex">
        <div class="t-self-stretch t-text-base title-large" [ngClass]="headerColor">
          {{ header }}
        </div>
      </div>
      <div class="t-justify-start t-items-center t-gap-2.5 t-flex">
        <span class="material-symbols-outlined t-text-base" [ngClass]="iconColor" *ngIf="panelOpenState[i] === false">{{expandIcon}}</span>
        <span class="material-symbols-outlined t-text-base" [ngClass]="iconColor" *ngIf="panelOpenState[i]">{{collapseIcon}}</span>
      </div>
    </mat-expansion-panel-header>
    <div class="t-mt-2">
      <ng-content select=".content-{{i}}"></ng-content>
    <ng-content *ngIf="!hasContent(i)"></ng-content>
    </div>
  </mat-expansion-panel>
</mat-accordion>


http.authorizeExchange(exchanges -> exchanges
                .pathMatchers("/").permitAll()
                .anyExchange().authenticated())
                .oauth2ResourceServer(oauth2ResourceServer ->
                oauth2ResourceServer.jwt(jwt ->
                    jwt.jwtDecoder(jwtDecoder())
                )
            )
            .oauth2Login()
            .and()
            .oauth2Client();




/* Expansion panel header height */
.expansion-panel-header {
  height: 2.5rem; /* Tailwind h-10 equivalent */
}

/* Flex container for header content */
.header-content-container {
  display: flex;
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: 0%;
  align-self: stretch;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
}

/* Title style within the header */
.header-title {
  align-self: stretch;
  font-size: 1rem; /* Tailwind text-base equivalent */
  /* Additional class for header color will be added dynamically with [ngClass] */
}

/* Flex container for icons */
.icons-container {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: 0.625rem; /* Tailwind gap-2.5 equivalent */
}

/* Icon style */
.icon-style {
  font-size: 1rem; /* Tailwind text-base equivalent */
  /* Additional class for icon color will be added dynamically with [ngClass] */
}

/* Content margin top */
.content-margin-top {
  margin-top: 0.5rem; /* Tailwind mt-2 equivalent */
}



<mat-accordion>
  <mat-expansion-panel [class.mat-expansion-panel]="false" *ngFor="let header of headers; let i = index" (opened)="togglePanel(i)" (closed)="togglePanel(i)" [expanded]="i === 0">
    <mat-expansion-panel-header class="expansion-panel-header">
      <div class="header-content-container">
        <div class="header-title" [ngClass]="headerColor">
          {{ header }}
        </div>
      </div>
      <div class="icons-container">
        <span class="material-symbols-outlined icon-style" [ngClass]="iconColor" *ngIf="panelOpenState[i] === false">{{expandIcon}}</span>
        <span class="material-symbols-outlined icon-style" [ngClass]="iconColor" *ngIf="panelOpenState[i]">{{collapseIcon}}</span>
      </div>
    </mat-expansion-panel-header>
    <div class="content-margin-top">
      <ng-content select=".content-{{i}}"></ng-content>
      <ng-content *ngIf="!hasContent(i)"></ng-content>
    </div>
  </mat-expansion-panel>
</mat-accordion>
