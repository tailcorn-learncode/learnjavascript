import {Injectable} from '@angular/core';
import {
    HttpRequest,
    HttpHandler,
    HttpEvent,
    HttpInterceptor,
    HttpErrorResponse
} from '@angular/common/http';
import {Observable, catchError, first, from, of, switchMap, take, throwError} from 'rxjs';
import {AuthService} from '../services/auth.service';
import {environment} from '../../environments/environment';

@Injectable()
export class AuthInterceptor implements HttpInterceptor {
    private loginUser = environment.currentuser;
    private tokenKey = environment.token;
    private apicode = environment.apicode;
    private accesscode = environment.accesscode;
    constructor(private authService: AuthService) {}

    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
        if (request.url.includes('/oauth2/auth')) {
            return next.handle(request);
        }

        return this.authService.fetchAccessToken().pipe(
            switchMap(token => {
                request = request.clone({
                    headers: request.headers
                        .set('Authorization', `Bearer ${token}`)
                        .set('apicode', this.apicode)
                        .set('accesscode', this.accesscode)
                });
                return next.handle(request);
            }),
            catchError(error => {
                request = request.clone({
                    headers: request.headers
                        .set('apicode', this.apicode)
                        .set('accesscode', this.accesscode)
                });
                return next.handle(request);
            })
        );
    }
    }
